name: CD - Dev

on:
  workflow_run:
    workflows: [ "CI" ]
    branches: [ dev ]
    types:
      - completed

jobs:
  cd:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-20.04
    container:
      image: ruby:3.0.4

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTS_DB_PASSWORD }}
          POSTGRES_DB: jj_users_posts_development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: docker build -t jibber-jabber-posts-dev .
        env:
          POSTS_DB_HOST: postgres #${{ secrets.POSTS_DB_HOST }}
          POSTS_DB_USER: postgres #${{ secrets.POSTS_DB_USER }}
          PGHOST: postgres
          PGUSER: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}

      - name: Tags
        run: |
          docker tag jibber-jabber-posts-dev ${{ secrets.DOCKER_USER }}/jibber-jabber-posts-dev:${{ github.sha }}
          docker tag jibber-jabber-posts-dev ${{ secrets.DOCKER_USER }}/jibber-jabber-posts-dev:latest

      - name: Push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/jibber-jabber-posts-dev:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USER }}/jibber-jabber-posts-dev:latest

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_DEV_USER }}
          SSH_KEY: ${{ secrets.SSH_DEV_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_DEV_HOST }}

      - name: Stop the server
        run: ssh dev 'sudo docker-compose stop'

      - name: Remove container and image
        run: ssh dev 'sudo docker container rm posts && sudo docker image rm georgesstefan/jibber-jabber-posts-dev'

      - name: Pull new image
        run: ssh dev 'sudo docker pull ${{ secrets.DOCKER_USER }}/jibber-jabber-posts-dev:${{ github.sha }}'

      - name: Start the server
        if: ${{ always() }}
        run: ssh dev 'sudo docker-compose up -d > /dev/null 2>&1'
